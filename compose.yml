services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "root"
      RABBITMQ_DEFAULT_PASS: "toor"
    networks:
      - broker_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 3

  pinger:
    build:
      context: ./pinger
      dockerfile: Dockerfile
    container_name: pinger
    ports:
      - "6767:6767"
    depends_on:
      rabbitmq:
        condition: service_healthy
      clickhouse:
        condition: service_started   # üëà –∂–¥–∞—Ç—å —Å—Ç–∞—Ä—Ç–∞ ClickHouse
    privileged: true
    environment:
      INTERVAL: 60
      INPUT_DATABASE_URL: postgresql://postgres:postgres@host.docker.internal:5432/monitor
    networks:
      - broker_network

  llm_service:
      build:
        context: ./LLM_service
        dockerfile: Dockerfile
      container_name: llm_service
      ports:
        - "6868:6868"
      depends_on:
        rabbitmq:
          condition: service_healthy # –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω healthcheck
      privileged: true
      environment:
        USE_SKIP_NOTIFICATION: 0 # –µ—Å–ª–∏ —Ö–æ—Ç–∏–º —á—Ç–æ–± –ª–ª–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥–∏–ª–∏ –ø–æ –≤—Å–µ–º —Å—Ç–∞—Ç—É—Å–∞–º –ø–æ—Å–ª–µ –ø–∏–Ω–≥–µ—Ä–∞
      networks:
        - broker_network

  tg_service:
    build:
      context: ./notifier-service/tg-bot
      dockerfile: Dockerfile
    container_name: tg_service
    ports:
      - "6966:6966"
    depends_on:
      rabbitmq:
        condition: service_healthy # –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω healthcheck
    privileged: true
    environment:
      # Telegram
      TG_TOKEN: 8368944259:AAHj-ivSsU-6GVV7nG4Ai1KFpNT6tKzIemM
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      # Logging
      LOG_LEVEL: INFO
    networks:
      - broker_network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
       - "6379:6379"
    networks:
      - broker_network

  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: clickhouse
    restart: unless-stopped
    ports:
      - "8123:8123"   # HTTP API
      - "9000:9000"   # Native protocol
    environment:
      CLICKHOUSE_DB: monitor
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - ./clickhouse_logs:/var/log/clickhouse-server
      - ./clickhouse/init:/docker-entrypoint-initdb.d  # üëà —Ç—É—Ç —Ç–≤–æ–∏ init.sql
    networks:
      - broker_network

networks:
  broker_network:
    driver: bridge
    external: true

  

