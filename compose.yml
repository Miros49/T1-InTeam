services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "root"
      RABBITMQ_DEFAULT_PASS: "toor"
    networks:
      - broker_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 3

  broker_service:
    build:
      context: ./broker
      dockerfile: Dockerfile
    container_name: broker_service
    ports:
      - "1234:1234"
    depends_on:
      rabbitmq:
        condition: service_healthy
    privileged: true
    networks:
      - broker_network
    env_file:
      - ./.env

  pinger:
    build:
      context: ./pinger
      dockerfile: Dockerfile
    container_name: pinger
    ports:
      - "6767:6767"
    depends_on:
      rabbitmq:
        condition: service_healthy
      broker_service:
        condition: service_started
    privileged: true
    env_file:
      - ./.env
    environment:
      INTERVAL: ${INTERVAL}
      INPUT_DATABASE_URL: ${INPUT_DATABASE_URL}
    networks:
      - broker_network

  llm_service:
    build:
      context: ./LLM_service
      dockerfile: Dockerfile
    container_name: llm_service
    ports:
      - "6868:6868"
    depends_on:
      rabbitmq:
        condition: service_healthy
      broker_service:
        condition: service_started
    privileged: true
    env_file:
      - ./.env
    environment:
      USE_SKIP_NOTIFICATION: ${USE_SKIP_NOTIFICATION}
    networks:
      - broker_network

  tg_service:
    build:
      context: ./notifier-service/tg-bot
      dockerfile: Dockerfile
    container_name: tg_service
    ports:
      - "6966:6966"
    depends_on:
      rabbitmq:
        condition: service_healthy
      broker_service:
        condition: service_started
    privileged: true
    env_file:
      - ./.env
    environment:
      TG_TOKEN: ${TG_TOKEN}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      LOG_LEVEL: ${LOG_LEVEL}
    networks:
      - broker_network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
       - "6379:6379"
    networks:
      - broker_network
    env_file:
      - ./.env

  example_service:
    build:
      context: ./example
      dockerfile: Dockerfile
    container_name: example_service
    ports:
      - "6969:6969"
    depends_on:
      rabbitmq:
        condition: service_healthy
      broker_service:
        condition: service_started
    privileged: true
    networks:
      - broker_network
    env_file:
      - ./.env

networks:
  broker_network:
    driver: bridge
    external: true
